'''
1) Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора
класса (метод init()), который должен принимать данные (список списков) для
формирования матрицы. [[], [], []]
Следующий шаг — реализовать перегрузку метода str() для вывода матрицы в
привычном виде. Далее реализовать перегрузку метода add() для реализации
операции сложения двух объектов класса Matrix (двух матриц). Результатом
сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно —
первый элемент первой строки первой матрицы складываем
с первым элементом первой строки второй матрицы и т.д.
Пример:
1 2 3
4 5 6
7 8 9

1 2 3
4 5 6
7 8 9

Сумма матриц:
2 4 6
8 10 12
14 16 18
'''


class Matrix:
    def __init__(self, matrix):
        self.matrix = matrix

    def __str__(self):
        return ''.join('\t'.join(map(str, self.matrix[i])) + '\n' for i in
                       range(len(self.matrix)))

    def __add__(self, other):
        return Matrix(
            [map(sum, zip(*i)) for i in zip(self.matrix, other.matrix)])


m1 = Matrix([[43, 12, 0], [-6, 77, 5], [-41, 14, 63]])
m2 = Matrix([[153, 2], [22, 34], [-7, 64]])
m3 = Matrix([[3, 5, 8, 3], [8, 3, 7, 1, -9]])
print(m1)
print(m2)
print(m3)
new_m = m1 + m2
print(new_m)
new_m = m1 + m3
print(new_m)
new_m = m2 + m3
print(new_m)
